[{"C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\index.js":"1","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\App.js":"2","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\reportWebVitals.js":"3","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\Title.js":"4","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\Sidebar.js":"5","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\About.js":"6","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\Feedback.js":"7","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\MealContainer.js":"8","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\AppContainer.js":"9","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\GraphContainer.js":"10","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\MealCard.js":"11"},{"size":1033,"mtime":1613050281304,"results":"12","hashOfConfig":"13"},{"size":1940,"mtime":1613294493543,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2065,"mtime":1613070474158,"results":"16","hashOfConfig":"13"},{"size":1494,"mtime":1613050670138,"results":"17","hashOfConfig":"13"},{"size":1974,"mtime":1613070475490,"results":"18","hashOfConfig":"13"},{"size":1410,"mtime":1613052874166,"results":"19","hashOfConfig":"13"},{"size":4856,"mtime":1613294491326,"results":"20","hashOfConfig":"13"},{"size":1354,"mtime":1613070469087,"results":"21","hashOfConfig":"13"},{"size":331,"mtime":1613070470310,"results":"22","hashOfConfig":"13"},{"size":291,"mtime":1613070465312,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"14w5ima",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\index.js",["56"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyBRIcvigaT1hlB5wFZRDUnGNBgLUPdpkhM\",\n//   authDomain: \"once-more-with-feeling-b6975.firebaseapp.com\",\n//   projectId: \"once-more-with-feeling-b6975\",\n//   storageBucket: \"once-more-with-feeling-b6975.appspot.com\",\n//   messagingSenderId: \"166815563135\",\n//   appId: \"1:166815563135:web:567181d8d7f9e31d2b6e4a\",\n//   measurementId: \"G-5GBV8ZCH3D\"\n// };\n\n// const firebaseApp = firebase.initializeApp(firebaseConfig);\n// const db = firebaseApp.firestore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["57","58"],"C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\App.js",["59"],"import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport background from \"./Images/background.jpg\";\nimport Title from \"./Components/Title\"\nimport Sidebar from \"./Components/Sidebar\"\nimport About from \"./Components/About\"\nimport Feedback from \"./Components/Feedback\"\nimport AppContainer from \"./Components/AppContainer\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      aboutVisible: false\n    }\n\n    this.toggleVisible = this.toggleVisible.bind(this);\n    this.toggleAboutVisible = this.toggleAboutVisible.bind(this);\n    this.toggleFeedbackVisible = this.toggleFeedbackVisible.bind(this);\n  }\n\n  toggleVisible() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }))\n  }\n\n  toggleAboutVisible() {\n    if (this.state.feedbackVisible === true) {\n      this.setState(() => ({\n        feedbackVisible: false\n      }))\n    }\n    this.setState((state) => ({\n      aboutVisible: !state.aboutVisible\n    }))\n  }\n\n  toggleFeedbackVisible() {\n    if (this.state.aboutVisible === true) {\n      this.setState(() => ({\n        aboutVisible: false\n      }))\n    }\n    this.setState((state) => ({\n      feedbackVisible: !state.feedbackVisible\n    }))\n  }\n\n  render() {\n    return(\n      <div>\n      <img style={{zIndex: \"-1\", filter: \"blur(5px)\", position: \"fixed\", top: \"0\", left: \"0\", height: \"100vh\", width: \"100vw\"}} alt=\"\" src={background} />\n      <Title visible={this.state.visible} toggleFeedbackVisible={this.toggleFeedbackVisible} toggleVisible={this.toggleVisible} toggleAboutVisible={this.toggleAboutVisible}/>\n      {this.state.visible && <Sidebar />} \n      {this.state.aboutVisible && <About toggleAboutVisible={this.toggleAboutVisible}/> }\n      {this.state.feedbackVisible && <Feedback toggleFeedbackVisible={this.toggleFeedbackVisible}/>}\n      <AppContainer />\n      </div>\n    );\n}}\nexport default App;\n\n","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\reportWebVitals.js",[],"C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\Title.js",["60","61","62","63","64"],"import React from 'react';\r\nimport { Component, useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nclass Title extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     visible: false\r\n        // }\r\n        // this.toggleVisible = this.toggleVisible.bind(this)\r\n    }\r\n\r\n\r\n    render() {\r\n        return ( \r\n            <header style={titleBack}> \r\n                {this.props.visible ? \r\n                <button onClick={this.props.toggleVisible}>Close Menu</button>\r\n                :\r\n                <button onClick={this.props.toggleVisible}>Open Menu</button>\r\n                }\r\n            <div style={blockLeft}>\r\n                <h1 style={titleText}>Thought for Food</h1>\r\n                <p style={subTitle}>Powered by Spoonacular and ImageCharts</p>\r\n            </div>\r\n\r\n            <div style={blockRight}>\r\n                <button style={rightWords} onClick={this.props.toggleAboutVisible}>About</button>\r\n                <button style={rightWords} onClick={this.props.toggleFeedbackVisible}>Feedback</button>\r\n            </div>\r\n        </header>\r\n            );\r\n    }\r\n}\r\n \r\nexport default Title;\r\n\r\nconst blockLeft = {\r\n    flex: \"1 0 auto\",\r\n    display: \"block\"\r\n}\r\n\r\nconst blockRight ={\r\n    flex: \"0 1 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n}\r\n\r\nconst rightWords = {\r\n    flex: \"1 0 auto\",\r\n    marginTop: \"0.3rem\",\r\n    marginBottom: \"0.1rem\",\r\n    marginRight: \"3rem\",\r\n    color: \"#002601\",\r\n    background: \"none\",\r\n    border: \"none\"\r\n}\r\n\r\nconst titleBack = {\r\n    backgroundColor: \"rgba(245, 245, 245, 0.6)\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    overflow: \"auto\",\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100vw\",\r\n    borderBottom: \"1px solid grey\",\r\n    boxShadow: \"2px 2px 30px grey\"\r\n}\r\n\r\nconst titleText = {\r\n    color: \"green\",\r\n    marginLeft: \"1rem\"\r\n}\r\n\r\nconst subTitle = {\r\n    color: \"#002601\",\r\n    fontSize: \"0.8rem\",\r\n    marginLeft: \"1rem\"\r\n}\r\n\r\n","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\Sidebar.js",["65","66","67"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <nav style={fullscreenNav}>\r\n                <div>\r\n                    <div>\r\n                        <button style={crossStyle}></button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h5 style={innerFont}>Single meal</h5>\r\n                        \r\n                    </div>\r\n\r\n                    <div>\r\n                        <h5 style={innerFont}>1 Day's Food<br />(3 meals)</h5>\r\n                        \r\n                    </div>\r\n\r\n                    <div>\r\n                        <h5 style={innerFont}>1 Week's food <br />(21 meals)</h5>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            \r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst fullscreenNav = {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"rgba(0, 204, 0, 0.7)\",\r\n}\r\n\r\nconst crossStyle = {\r\n    marginTop: \"10rem\",\r\n    marginBottom: \"5vh\",\r\n    background: \"none\",\r\n    border: \"none\",\r\n    fontSize: \"1.5rem\",\r\n    color: \"rgba(245, 245, 245, 0.95)\"\r\n}\r\n\r\nconst innerFont = {\r\n    fontSize: \"1.5rem\",\r\n    color: \"rgba(245, 245, 245, 0.95)\",\r\n    marginTop: \"auto\",\r\n    marginBottom: \"15vh\"\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\About.js",["68"],"import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={bgCard}>\r\n                <div>\r\n                    <button style={cardButton} onClick={this.props.toggleAboutVisible}>\r\n                        X\r\n                    </button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h1 style={cardTitle}>What we're about</h1>\r\n                    <p style={cardBody}>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n                    incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n                    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute \r\n                    irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla \r\n                    pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia \r\n                    deserunt mollit anim id est laborum.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Using this method of adding styling for now, will change at a later date\r\n\r\nconst bgCard = {\r\n    position: \"absolute\",\r\n    height: \"75vh\",\r\n    width: \"75vw\",\r\n    zIndex: \"3\",\r\n    backgroundColor: \"rgba(250, 250, 250, 0.95)\",\r\n    margin: \"auto\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"2px 2px 30px grey\",\r\n}\r\n\r\nconst cardButton = {\r\n    background: \"none\",\r\n    border: \"none\",\r\n    fontSize: \"1.3rem\",\r\n    margin: \"3rem 5rem\",\r\n    marginBottom: \"0px\"\r\n}\r\n\r\nconst cardBody = {\r\n    marginLeft: \"5rem\",\r\n    color: \"#002601\",\r\n    marginRight: \"5rem\"\r\n}\r\n\r\nconst cardTitle = {\r\n    fontSize: \"3rem\",\r\n    marginTop: \"0px\",\r\n    textAlign: \"center\",\r\n    color: \"green\"\r\n}\r\n\r\nexport default About","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\Feedback.js",["69"],"import React, { Component } from 'react';\r\n\r\nclass Feedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n    render() { \r\n        return ( \r\n            <div style={bgCard}>\r\n                <div>\r\n                    <button style={cardButton} onClick={this.props.toggleFeedbackVisible}>\r\n                        X\r\n                    </button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h1 style={cardTitle}>Want to give me some feedback?</h1>\r\n                    <p style={cardBody}>\r\n                        Contact me on blah blah blah\r\n                    </p>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst bgCard = {\r\n    position: \"absolute\",\r\n    height: \"75vh\",\r\n    width: \"75vw\",\r\n    zIndex: \"3\",\r\n    backgroundColor: \"rgba(250, 250, 250, 0.95)\",\r\n    margin: \"auto\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    borderRadius: \"1rem\",\r\n    boxShadow: \"2px 2px 30px grey\",\r\n}\r\n\r\nconst cardButton = {\r\n    background: \"none\",\r\n    border: \"none\",\r\n    fontSize: \"1.3rem\",\r\n    margin: \"3rem 5rem\",\r\n    marginBottom: \"0px\"\r\n}\r\n\r\nconst cardBody = {\r\n    marginLeft: \"5rem\",\r\n    color: \"#002601\",\r\n    marginRight: \"5rem\"\r\n}\r\n\r\nconst cardTitle = {\r\n    fontSize: \"3rem\",\r\n    marginTop: \"0px\",\r\n    textAlign: \"center\",\r\n    color: \"green\"\r\n}\r\n\r\n \r\nexport default Feedback;","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\MealContainer.js",["70"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport MealCard from \"./MealCard\";\r\n\r\nclass MealContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formVisible: false,\r\n            results: [{\r\n                id: \"\",\r\n                title: \"\",\r\n                image: \"\",\r\n                description: \"\",\r\n                ingredients: {\r\n                },\r\n                nutrition: {\r\n                }\r\n            }],\r\n            page: 0\r\n        }\r\n        \r\n        this.makeFormSee = this.makeFormSee.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.makeFormHide = this.makeFormHide.bind(this);\r\n    }\r\n\r\n    makeFormSee() {\r\n        console.log(process.env.REACT_APP_API_KEY)\r\n        this.setState(() => ({\r\n            formVisible: true\r\n        }))\r\n    }\r\n\r\n    makeFormHide() {\r\n        this.setState(() => ({\r\n            formVisible: false,\r\n            vegetarian: \"\",\r\n            vegan: \"\",\r\n            glutenFree: \"\"\r\n        }))\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.setState(() => ({\r\n            formVisible: false\r\n        }))\r\n        const url = \"https://api.spoonacular.com/recipes/complexSearch\"\r\n        let config = {\r\n            params: {\r\n                apiKey: process.env.REACT_APP_API_KEY,\r\n                query: this.state.query,\r\n                maxCalories: this.state.maxCal || 9999,\r\n                minCalories: this.state.minCal || 0,\r\n                maxFat: this.state.maxFat || 9999,\r\n                minFat: this.state.minFat || 0,\r\n                maxCarbs: this.state.maxCarb || 9999,\r\n                minCarbs: this.state.minCarb || 0,\r\n                minProtein: this.state.minProt || 0,\r\n                maxProtein: this.state.maxProt || 9999,\r\n                diet: `${this.state.vegetarian},${this.state.vegan},${this.state.glutenFree}`,\r\n                addRecipeInformation: true,\r\n                number: 25,\r\n                offset: this.state.page * 25,\r\n                limitLicense: false\r\n            } \r\n        }\r\n        \r\n        axios.get(url, config)\r\n        .then((response) => console.log(response))\r\n        .catch((error) => console.log(error))\r\n\r\n        this.setState(() => ({\r\n            vegetarian: \"\",\r\n            vegan: \"\",\r\n            glutenFree: \"\"\r\n        }))\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState(() => ({\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        let form = \r\n        <div>\r\n            <button onClick={this.makeFormHide}>X</button>\r\n            <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n                <label>Input search term</label>\r\n                <input name=\"query\" type=\"text\" required></input>\r\n                <label>Dietary requirements? (tick all that apply)</label>\r\n                <input name=\"vegetarian\" type=\"checkbox\" value=\"vegetarian\"></input>\r\n                <label>Vegetarian</label>\r\n                <input name=\"vegan\" type=\"checkbox\" value=\"vegan\"></input>\r\n                <label>Vegan</label>\r\n                <input name=\"glutenFree\" type=\"checkbox\" value=\"gluten free\"></input>\r\n                <label>Gluten free</label>\r\n                <label>Minimum Calories per serving</label>\r\n                <input name=\"minCal\" type=\"number\"></input>\r\n                <label>Maximum Calories per serving</label>\r\n                <input name=\"maxCal\" type=\"number\"></input>\r\n                <label>Minimum Fat per serving</label>\r\n                <input name=\"minFat\" type=\"number\"></input>\r\n                <label>Maximum Fat per serving</label>\r\n                <input name=\"maxFat\" type=\"number\"></input>\r\n                <label>Minimum Carbs per serving</label>\r\n                <input name=\"minCarb\" type=\"number\"></input>\r\n                <label>Maximum Carbs per serving</label>\r\n                <input name=\"maxCarb\" type=\"number\"></input>\r\n                <label>Minimum protein per serving</label>\r\n                <input name=\"minProt\" type=\"number\"></input>\r\n                <label>Maximum protein per serving</label>\r\n                <input name=\"maxProt\" type=\"number\"></input>\r\n                <input type=\"submit\" value=\"Search\"></input>\r\n            </form>\r\n        </div>\r\n        return ( \r\n            <div style={{position: \"absolute\", left: \"500px\", top: \"500px\"}}>\r\n                <button onClick={this.makeFormSee}>Add meal</button>\r\n                <p>{this.state.vegetarian}</p>\r\n                {this.state.formVisible && form}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MealContainer;\r\n\r\n// Add seperate component to pass props to, which will create new elements on the regular","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\AppContainer.js",["71"],"import React, { Component } from 'react';\r\nimport GraphContainer from \"./GraphContainer\"\r\nimport MealContainer from \"./MealContainer\"\r\nimport axios from \"axios\"\r\n\r\nclass AppContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            carbs: 0,\r\n            fat: 0,\r\n            protein: 0,\r\n            calories: 0\r\n         }\r\n        \r\n        this.handleMealChange = this.handleMealChange.bind(this)\r\n    }\r\n\r\n    handleMealChange(e) {\r\n        this.setState(() => ({\r\n            carbs: e.target.carbs,\r\n            fat: e.target.fat,\r\n            protein: e.target.protein,\r\n            calories: e.target.protein\r\n        }))\r\n    }\r\n\r\n\r\n\r\n\r\n    render() { \r\n        return (\r\n            <container>\r\n                <MealContainer \r\n                    carbs={this.state.carbs} \r\n                    fat={this.state.fat} \r\n                    protein={this.state.protein} \r\n                    calories={this.state.calories}\r\n                    onChange={this.handleMealChange}/>\r\n                <GraphContainer \r\n                    carbs={this.state.carbs} \r\n                    fat={this.state.fat} \r\n                    protein={this.state.protein} \r\n                    calories={this.state.calories}/>\r\n            </container>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AppContainer;","C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\GraphContainer.js",[],"C:\\Users\\japar\\Documents\\JSPrac\\Projects\\food-app\\src\\Components\\MealCard.js",[],["72","73"],{"ruleId":"74","severity":1,"message":"75","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":16},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":12},{"ruleId":"74","severity":1,"message":"83","line":2,"column":21,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"84","line":2,"column":32,"nodeType":"76","messageId":"77","endLine":2,"endColumn":40},{"ruleId":"74","severity":1,"message":"85","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":13},{"ruleId":"74","severity":1,"message":"86","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":8,"column":5,"nodeType":"89","messageId":"90","endLine":14,"endColumn":6},{"ruleId":"74","severity":1,"message":"84","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":18},{"ruleId":"74","severity":1,"message":"83","line":3,"column":20,"nodeType":"76","messageId":"77","endLine":3,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":6,"column":5,"nodeType":"89","messageId":"90","endLine":8,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":4,"column":5,"nodeType":"89","messageId":"90","endLine":6,"endColumn":6},{"ruleId":"87","severity":1,"message":"88","line":4,"column":5,"nodeType":"89","messageId":"90","endLine":6,"endColumn":6},{"ruleId":"74","severity":1,"message":"91","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"85","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"78","replacedBy":"92"},{"ruleId":"80","replacedBy":"93"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'logo' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Sidebar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MealCard' is defined but never used.",["94"],["95"],"no-global-assign","no-unsafe-negation"]